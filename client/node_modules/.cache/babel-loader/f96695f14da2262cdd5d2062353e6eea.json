{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elsow\\\\Documents\\\\React Projects\\\\videoChatApp\\\\client\\\\src\\\\components\\\\Options.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CopyToClipboard, { copyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { SocketContext } from '../SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  gridContainer: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    }\n  },\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '80%'\n    }\n  },\n  margin: {\n    marginTop: 20\n  },\n  padding: {\n    padding: 20\n  },\n  paper: {\n    padding: '10px 20px',\n    border: '2px solid black'\n  }\n}));\n\nconst Options = ({\n  children\n}) => {\n  _s();\n\n  const {\n    me,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    leaveCall,\n    callUser\n  } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.gridContainer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            className: classes.padding,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Account Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: me,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 90\n                }, this),\n                children: \"Copy your ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Options, \"uHxiweX4/6OWqNg8A6qstc6LoLk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["C:/Users/elsow/Documents/React Projects/videoChatApp/client/src/components/Options.jsx"],"names":["React","useState","useContext","Button","TextField","Grid","Typography","Container","Paper","makeStyles","CopyToClipboard","copyToClipboard","Assignment","Phone","PhoneDisabled","SocketContext","useStyles","theme","root","display","flexDirection","gridContainer","width","breakpoints","down","container","margin","padding","marginTop","paper","border","Options","children","me","callAccepted","name","setName","callEnded","leaveCall","callUser","idToCall","setIdToCall","classes","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper} from '@material-ui/core';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport CopyToClipboard, { copyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport {SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n\r\nconst Options = ({ children }) => {\r\n   const {me, callAccepted, name, setName, callEnded, leaveCall, callUser} = useContext(SocketContext);\r\n   const [idToCall, setIdToCall] = useState('');\r\n   const classes = useStyles();\r\n    return (\r\n  <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n          <form className={classes.root}>\r\n            <Grid container className={classes.gridContainer}>\r\n                <Grid item xs={12} md={6} className={classes.padding}>\r\n                    <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                    <TextField label=\"Name\" value={name} onChange={(e)=> setName(e.target.value)} fullWidth/>\r\n                    <CopyToClipboard text={me} className={classes.margin}>\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                            Copy your ID\r\n                        </Button>\r\n                        \r\n                    </CopyToClipboard>\r\n                </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n      </Paper>\r\n      {children}\r\n  </Container>\r\n\r\n\r\n      )\r\n};\r\n \r\n \r\nexport default Options;"]},"metadata":{},"sourceType":"module"}