{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Namespace = exports.Socket = exports.Server = void 0;\n\nconst http = require(\"http\");\n\nconst fs_1 = require(\"fs\");\n\nconst zlib_1 = require(\"zlib\");\n\nconst accepts = require(\"accepts\");\n\nconst stream_1 = require(\"stream\");\n\nconst path = require(\"path\");\n\nconst engine = require(\"engine.io\");\n\nconst client_1 = require(\"./client\");\n\nconst events_1 = require(\"events\");\n\nconst namespace_1 = require(\"./namespace\");\n\nObject.defineProperty(exports, \"Namespace\", {\n  enumerable: true,\n  get: function () {\n    return namespace_1.Namespace;\n  }\n});\n\nconst parent_namespace_1 = require(\"./parent-namespace\");\n\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\n\nconst parser = __importStar(require(\"socket.io-parser\"));\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function () {\n    return socket_1.Socket;\n  }\n});\n\nconst typed_events_1 = require(\"./typed-events\");\n\nconst debug = debug_1.default(\"socket.io:server\");\n\nconst clientVersion = require(\"../package.json\").version;\n\nconst dotMapRegex = /\\.map/;\n\nclass Server extends typed_events_1.StrictEventEmitter {\n  constructor(srv, opts = {}) {\n    super();\n    /**\n     * @private\n     */\n\n    this._nsps = new Map();\n    this.parentNsps = new Map();\n\n    if (\"object\" === typeof srv && srv instanceof Object && !srv.listen) {\n      opts = srv;\n      srv = undefined;\n    }\n\n    this.path(opts.path || \"/socket.io\");\n    this.connectTimeout(opts.connectTimeout || 45000);\n    this.serveClient(false !== opts.serveClient);\n    this._parser = opts.parser || parser;\n    this.encoder = new this._parser.Encoder();\n    this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n    this.sockets = this.of(\"/\");\n    this.opts = opts;\n    if (srv) this.attach(srv);\n  }\n\n  serveClient(v) {\n    if (!arguments.length) return this._serveClient;\n    this._serveClient = v;\n    return this;\n  }\n  /**\n   * Executes the middleware for an incoming namespace not already created on the server.\n   *\n   * @param name - name of incoming namespace\n   * @param auth - the auth parameters\n   * @param fn - callback\n   *\n   * @private\n   */\n\n\n  _checkNamespace(name, auth, fn) {\n    if (this.parentNsps.size === 0) return fn(false);\n    const keysIterator = this.parentNsps.keys();\n\n    const run = () => {\n      const nextFn = keysIterator.next();\n\n      if (nextFn.done) {\n        return fn(false);\n      }\n\n      nextFn.value(name, auth, (err, allow) => {\n        if (err || !allow) {\n          run();\n        } else {\n          fn(this.parentNsps.get(nextFn.value).createChild(name));\n        }\n      });\n    };\n\n    run();\n  }\n\n  path(v) {\n    if (!arguments.length) return this._path;\n    this._path = v.replace(/\\/$/, \"\");\n\n    const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\n    this.clientPathRegex = new RegExp(\"^\" + escapedPath + \"/socket\\\\.io(\\\\.min|\\\\.msgpack\\\\.min)?\\\\.js(\\\\.map)?$\");\n    return this;\n  }\n\n  connectTimeout(v) {\n    if (v === undefined) return this._connectTimeout;\n    this._connectTimeout = v;\n    return this;\n  }\n\n  adapter(v) {\n    if (!arguments.length) return this._adapter;\n    this._adapter = v;\n\n    for (const nsp of this._nsps.values()) {\n      nsp._initAdapter();\n    }\n\n    return this;\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   * @public\n   */\n\n\n  listen(srv, opts = {}) {\n    return this.attach(srv, opts);\n  }\n  /**\n   * Attaches socket.io to a server or port.\n   *\n   * @param srv - server or port\n   * @param opts - options passed to engine.io\n   * @return self\n   * @public\n   */\n\n\n  attach(srv, opts = {}) {\n    if (\"function\" == typeof srv) {\n      const msg = \"You are trying to attach socket.io to an express \" + \"request handler function. Please pass a http.Server instance.\";\n      throw new Error(msg);\n    } // handle a port as a string\n\n\n    if (Number(srv) == srv) {\n      srv = Number(srv);\n    }\n\n    if (\"number\" == typeof srv) {\n      debug(\"creating http server and binding to %d\", srv);\n      const port = srv;\n      srv = http.createServer((req, res) => {\n        res.writeHead(404);\n        res.end();\n      });\n      srv.listen(port);\n    } // merge the options passed to the Socket.IO server\n\n\n    Object.assign(opts, this.opts); // set engine.io path to `/socket.io`\n\n    opts.path = opts.path || this._path;\n    this.initEngine(srv, opts);\n    return this;\n  }\n  /**\n   * Initialize engine\n   *\n   * @param srv - the server to attach to\n   * @param opts - options passed to engine.io\n   * @private\n   */\n\n\n  initEngine(srv, opts) {\n    // initialize engine\n    debug(\"creating engine.io instance with opts %j\", opts);\n    this.eio = engine.attach(srv, opts); // attach static file serving\n\n    if (this._serveClient) this.attachServe(srv); // Export http server\n\n    this.httpServer = srv; // bind to engine events\n\n    this.bind(this.eio);\n  }\n  /**\n   * Attaches the static file serving.\n   *\n   * @param srv http server\n   * @private\n   */\n\n\n  attachServe(srv) {\n    debug(\"attaching client serving req handler\");\n    const evs = srv.listeners(\"request\").slice(0);\n    srv.removeAllListeners(\"request\");\n    srv.on(\"request\", (req, res) => {\n      if (this.clientPathRegex.test(req.url)) {\n        this.serve(req, res);\n      } else {\n        for (let i = 0; i < evs.length; i++) {\n          evs[i].call(srv, req, res);\n        }\n      }\n    });\n  }\n  /**\n   * Handles a request serving of client source and map\n   *\n   * @param req\n   * @param res\n   * @private\n   */\n\n\n  serve(req, res) {\n    const filename = req.url.replace(this._path, \"\");\n    const isMap = dotMapRegex.test(filename);\n    const type = isMap ? \"map\" : \"source\"; // Per the standard, ETags must be quoted:\n    // https://tools.ietf.org/html/rfc7232#section-2.3\n\n    const expectedEtag = '\"' + clientVersion + '\"';\n    const weakEtag = \"W/\" + expectedEtag;\n    const etag = req.headers[\"if-none-match\"];\n\n    if (etag) {\n      if (expectedEtag === etag || weakEtag === etag) {\n        debug(\"serve client %s 304\", type);\n        res.writeHead(304);\n        res.end();\n        return;\n      }\n    }\n\n    debug(\"serve client %s\", type);\n    res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n    res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n    res.setHeader(\"ETag\", expectedEtag);\n\n    if (!isMap) {\n      res.setHeader(\"X-SourceMap\", filename.substring(1) + \".map\");\n    }\n\n    Server.sendFile(filename, req, res);\n  }\n  /**\n   * @param filename\n   * @param req\n   * @param res\n   * @private\n   */\n\n\n  static sendFile(filename, req, res) {\n    const readStream = fs_1.createReadStream(path.join(__dirname, \"../client-dist/\", filename));\n    const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n\n    const onError = err => {\n      if (err) {\n        res.end();\n      }\n    };\n\n    switch (encoding) {\n      case \"br\":\n        res.writeHead(200, {\n          \"content-encoding\": \"br\"\n        });\n        readStream.pipe(zlib_1.createBrotliCompress()).pipe(res);\n        stream_1.pipeline(readStream, zlib_1.createBrotliCompress(), res, onError);\n        break;\n\n      case \"gzip\":\n        res.writeHead(200, {\n          \"content-encoding\": \"gzip\"\n        });\n        stream_1.pipeline(readStream, zlib_1.createGzip(), res, onError);\n        break;\n\n      case \"deflate\":\n        res.writeHead(200, {\n          \"content-encoding\": \"deflate\"\n        });\n        stream_1.pipeline(readStream, zlib_1.createDeflate(), res, onError);\n        break;\n\n      default:\n        res.writeHead(200);\n        stream_1.pipeline(readStream, res, onError);\n    }\n  }\n  /**\n   * Binds socket.io to an engine.io instance.\n   *\n   * @param {engine.Server} engine engine.io (or compatible) server\n   * @return self\n   * @public\n   */\n\n\n  bind(engine) {\n    this.engine = engine;\n    this.engine.on(\"connection\", this.onconnection.bind(this));\n    return this;\n  }\n  /**\n   * Called with each incoming transport connection.\n   *\n   * @param {engine.Socket} conn\n   * @return self\n   * @private\n   */\n\n\n  onconnection(conn) {\n    debug(\"incoming connection with id %s\", conn.id);\n    const client = new client_1.Client(this, conn);\n\n    if (conn.protocol === 3) {\n      // @ts-ignore\n      client.connect(\"/\");\n    }\n\n    return this;\n  }\n  /**\n   * Looks up a namespace.\n   *\n   * @param {String|RegExp|Function} name nsp name\n   * @param fn optional, nsp `connection` ev handler\n   * @public\n   */\n\n\n  of(name, fn) {\n    if (typeof name === \"function\" || name instanceof RegExp) {\n      const parentNsp = new parent_namespace_1.ParentNamespace(this);\n      debug(\"initializing parent namespace %s\", parentNsp.name);\n\n      if (typeof name === \"function\") {\n        this.parentNsps.set(name, parentNsp);\n      } else {\n        this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n      }\n\n      if (fn) {\n        // @ts-ignore\n        parentNsp.on(\"connect\", fn);\n      }\n\n      return parentNsp;\n    }\n\n    if (String(name)[0] !== \"/\") name = \"/\" + name;\n\n    let nsp = this._nsps.get(name);\n\n    if (!nsp) {\n      debug(\"initializing namespace %s\", name);\n      nsp = new namespace_1.Namespace(this, name);\n\n      this._nsps.set(name, nsp);\n    }\n\n    if (fn) nsp.on(\"connect\", fn);\n    return nsp;\n  }\n  /**\n   * Closes server connection\n   *\n   * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n   * @public\n   */\n\n\n  close(fn) {\n    for (const socket of this.sockets.sockets.values()) {\n      socket._onclose(\"server shutting down\");\n    }\n\n    this.engine.close();\n\n    if (this.httpServer) {\n      this.httpServer.close(fn);\n    } else {\n      fn && fn();\n    }\n  }\n  /**\n   * Sets up namespace middleware.\n   *\n   * @return self\n   * @public\n   */\n\n\n  use(fn) {\n    this.sockets.use(fn);\n    return this;\n  }\n  /**\n   * Targets a room when emitting.\n   *\n   * @param room\n   * @return self\n   * @public\n   */\n\n\n  to(room) {\n    return this.sockets.to(room);\n  }\n  /**\n   * Targets a room when emitting.\n   *\n   * @param room\n   * @return self\n   * @public\n   */\n\n\n  in(room) {\n    return this.sockets.in(room);\n  }\n  /**\n   * Excludes a room when emitting.\n   *\n   * @param name\n   * @return self\n   * @public\n   */\n\n\n  except(name) {\n    this.sockets.except(name);\n    return this;\n  }\n  /**\n   * Sends a `message` event to all clients.\n   *\n   * @return self\n   * @public\n   */\n\n\n  send(...args) {\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Sends a `message` event to all clients.\n   *\n   * @return self\n   * @public\n   */\n\n\n  write(...args) {\n    this.sockets.emit(\"message\", ...args);\n    return this;\n  }\n  /**\n   * Gets a list of socket ids.\n   *\n   * @public\n   */\n\n\n  allSockets() {\n    return this.sockets.allSockets();\n  }\n  /**\n   * Sets the compress flag.\n   *\n   * @param compress - if `true`, compresses the sending data\n   * @return self\n   * @public\n   */\n\n\n  compress(compress) {\n    return this.sockets.compress(compress);\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n   * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n   * and is in the middle of a request-response cycle).\n   *\n   * @return self\n   * @public\n   */\n\n\n  get volatile() {\n    return this.sockets.volatile;\n  }\n  /**\n   * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n   *\n   * @return self\n   * @public\n   */\n\n\n  get local() {\n    return this.sockets.local;\n  }\n  /**\n   * Returns the matching socket instances\n   *\n   * @public\n   */\n\n\n  fetchSockets() {\n    return this.sockets.fetchSockets();\n  }\n  /**\n   * Makes the matching socket instances join the specified rooms\n   *\n   * @param room\n   * @public\n   */\n\n\n  socketsJoin(room) {\n    return this.sockets.socketsJoin(room);\n  }\n  /**\n   * Makes the matching socket instances leave the specified rooms\n   *\n   * @param room\n   * @public\n   */\n\n\n  socketsLeave(room) {\n    return this.sockets.socketsLeave(room);\n  }\n  /**\n   * Makes the matching socket instances disconnect\n   *\n   * @param close - whether to close the underlying connection\n   * @public\n   */\n\n\n  disconnectSockets(close = false) {\n    return this.sockets.disconnectSockets(close);\n  }\n\n}\n\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\n\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n  return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n  Server.prototype[fn] = function () {\n    return this.sockets[fn].apply(this.sockets, arguments);\n  };\n});\n\nmodule.exports = (srv, opts) => new Server(srv, opts);\n\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;","map":{"version":3,"sources":["C:/Users/elsow/Documents/React Projects/videoChatApp/node_modules/socket.io/dist/index.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","Namespace","Socket","Server","http","require","fs_1","zlib_1","accepts","stream_1","path","engine","client_1","events_1","namespace_1","parent_namespace_1","socket_io_adapter_1","parser","debug_1","socket_1","typed_events_1","debug","default","clientVersion","version","dotMapRegex","StrictEventEmitter","constructor","srv","opts","_nsps","Map","parentNsps","listen","connectTimeout","serveClient","_parser","encoder","Encoder","adapter","Adapter","sockets","of","attach","arguments","length","_serveClient","_checkNamespace","name","auth","fn","size","keysIterator","keys","run","nextFn","next","done","err","allow","createChild","_path","replace","escapedPath","clientPathRegex","RegExp","_connectTimeout","_adapter","nsp","values","_initAdapter","msg","Error","Number","port","createServer","req","res","writeHead","end","assign","initEngine","eio","attachServe","httpServer","bind","evs","listeners","slice","removeAllListeners","on","test","url","serve","i","filename","isMap","type","expectedEtag","weakEtag","etag","headers","setHeader","substring","sendFile","readStream","createReadStream","join","__dirname","encoding","encodings","onError","pipe","createBrotliCompress","pipeline","createGzip","createDeflate","onconnection","conn","id","client","Client","protocol","connect","parentNsp","ParentNamespace","set","String","close","socket","_onclose","use","to","room","in","except","send","args","emit","write","allSockets","compress","volatile","local","fetchSockets","socketsJoin","socketsLeave","disconnectSockets","emitterMethods","EventEmitter","filter","key","forEach","apply","module"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBJ,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;AAAEG,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,GAAG,EAAE,YAAW;AAAE,aAAON,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,GAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;AAC3FX,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBI,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;AAChBT,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd,EAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CV,CAA1C,CAAvB,EAAqEL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;;AACzGM,EAAAA,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;AACA,SAAOE,MAAP;AACH,CAND;;AAOA,IAAII,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUN,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAd,MAAM,CAACO,cAAP,CAAsBc,OAAtB,EAA+B,YAA/B,EAA6C;AAAET,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAS,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAA3D;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAApB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMS,WAAW,GAAGT,OAAO,CAAC,aAAD,CAA3B;;AACA1B,MAAM,CAACO,cAAP,CAAsBc,OAAtB,EAA+B,WAA/B,EAA4C;AAAEb,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAO0B,WAAW,CAACb,SAAnB;AAA+B;AAAtE,CAA5C;;AACA,MAAMc,kBAAkB,GAAGV,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAMW,mBAAmB,GAAGX,OAAO,CAAC,mBAAD,CAAnC;;AACA,MAAMY,MAAM,GAAGzB,YAAY,CAACa,OAAO,CAAC,kBAAD,CAAR,CAA3B;;AACA,MAAMa,OAAO,GAAGnB,eAAe,CAACM,OAAO,CAAC,OAAD,CAAR,CAA/B;;AACA,MAAMc,QAAQ,GAAGd,OAAO,CAAC,UAAD,CAAxB;;AACA1B,MAAM,CAACO,cAAP,CAAsBc,OAAtB,EAA+B,QAA/B,EAAyC;AAAEb,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAO+B,QAAQ,CAACjB,MAAhB;AAAyB;AAAhE,CAAzC;;AACA,MAAMkB,cAAc,GAAGf,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMgB,KAAK,GAAGH,OAAO,CAACI,OAAR,CAAgB,kBAAhB,CAAd;;AACA,MAAMC,aAAa,GAAGlB,OAAO,CAAC,iBAAD,CAAP,CAA2BmB,OAAjD;;AACA,MAAMC,WAAW,GAAG,OAApB;;AACA,MAAMtB,MAAN,SAAqBiB,cAAc,CAACM,kBAApC,CAAuD;AACnDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,IAAI,GAAG,EAAb,EAAiB;AACxB;AACA;AACR;AACA;;AACQ,SAAKC,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACA,SAAKC,UAAL,GAAkB,IAAID,GAAJ,EAAlB;;AACA,QAAI,aAAa,OAAOH,GAApB,IACAA,GAAG,YAAYjD,MADf,IAEA,CAACiD,GAAG,CAACK,MAFT,EAEiB;AACbJ,MAAAA,IAAI,GAAGD,GAAP;AACAA,MAAAA,GAAG,GAAG3C,SAAN;AACH;;AACD,SAAKyB,IAAL,CAAUmB,IAAI,CAACnB,IAAL,IAAa,YAAvB;AACA,SAAKwB,cAAL,CAAoBL,IAAI,CAACK,cAAL,IAAuB,KAA3C;AACA,SAAKC,WAAL,CAAiB,UAAUN,IAAI,CAACM,WAAhC;AACA,SAAKC,OAAL,GAAeP,IAAI,CAACZ,MAAL,IAAeA,MAA9B;AACA,SAAKoB,OAAL,GAAe,IAAI,KAAKD,OAAL,CAAaE,OAAjB,EAAf;AACA,SAAKC,OAAL,CAAaV,IAAI,CAACU,OAAL,IAAgBvB,mBAAmB,CAACwB,OAAjD;AACA,SAAKC,OAAL,GAAe,KAAKC,EAAL,CAAQ,GAAR,CAAf;AACA,SAAKb,IAAL,GAAYA,IAAZ;AACA,QAAID,GAAJ,EACI,KAAKe,MAAL,CAAYf,GAAZ;AACP;;AACDO,EAAAA,WAAW,CAAC7C,CAAD,EAAI;AACX,QAAI,CAACsD,SAAS,CAACC,MAAf,EACI,OAAO,KAAKC,YAAZ;AACJ,SAAKA,YAAL,GAAoBxD,CAApB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyD,EAAAA,eAAe,CAACC,IAAD,EAAOC,IAAP,EAAaC,EAAb,EAAiB;AAC5B,QAAI,KAAKlB,UAAL,CAAgBmB,IAAhB,KAAyB,CAA7B,EACI,OAAOD,EAAE,CAAC,KAAD,CAAT;AACJ,UAAME,YAAY,GAAG,KAAKpB,UAAL,CAAgBqB,IAAhB,EAArB;;AACA,UAAMC,GAAG,GAAG,MAAM;AACd,YAAMC,MAAM,GAAGH,YAAY,CAACI,IAAb,EAAf;;AACA,UAAID,MAAM,CAACE,IAAX,EAAiB;AACb,eAAOP,EAAE,CAAC,KAAD,CAAT;AACH;;AACDK,MAAAA,MAAM,CAAChE,KAAP,CAAayD,IAAb,EAAmBC,IAAnB,EAAyB,CAACS,GAAD,EAAMC,KAAN,KAAgB;AACrC,YAAID,GAAG,IAAI,CAACC,KAAZ,EAAmB;AACfL,UAAAA,GAAG;AACN,SAFD,MAGK;AACDJ,UAAAA,EAAE,CAAC,KAAKlB,UAAL,CAAgB5C,GAAhB,CAAoBmE,MAAM,CAAChE,KAA3B,EAAkCqE,WAAlC,CAA8CZ,IAA9C,CAAD,CAAF;AACH;AACJ,OAPD;AAQH,KAbD;;AAcAM,IAAAA,GAAG;AACN;;AACD5C,EAAAA,IAAI,CAACpB,CAAD,EAAI;AACJ,QAAI,CAACsD,SAAS,CAACC,MAAf,EACI,OAAO,KAAKgB,KAAZ;AACJ,SAAKA,KAAL,GAAavE,CAAC,CAACwE,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAb;;AACA,UAAMC,WAAW,GAAG,KAAKF,KAAL,CAAWC,OAAX,CAAmB,wBAAnB,EAA6C,MAA7C,CAApB;;AACA,SAAKE,eAAL,GAAuB,IAAIC,MAAJ,CAAW,MAC9BF,WAD8B,GAE9B,uDAFmB,CAAvB;AAGA,WAAO,IAAP;AACH;;AACD7B,EAAAA,cAAc,CAAC5C,CAAD,EAAI;AACd,QAAIA,CAAC,KAAKL,SAAV,EACI,OAAO,KAAKiF,eAAZ;AACJ,SAAKA,eAAL,GAAuB5E,CAAvB;AACA,WAAO,IAAP;AACH;;AACDiD,EAAAA,OAAO,CAACjD,CAAD,EAAI;AACP,QAAI,CAACsD,SAAS,CAACC,MAAf,EACI,OAAO,KAAKsB,QAAZ;AACJ,SAAKA,QAAL,GAAgB7E,CAAhB;;AACA,SAAK,MAAM8E,GAAX,IAAkB,KAAKtC,KAAL,CAAWuC,MAAX,EAAlB,EAAuC;AACnCD,MAAAA,GAAG,CAACE,YAAJ;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIrC,EAAAA,MAAM,CAACL,GAAD,EAAMC,IAAI,GAAG,EAAb,EAAiB;AACnB,WAAO,KAAKc,MAAL,CAAYf,GAAZ,EAAiBC,IAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIc,EAAAA,MAAM,CAACf,GAAD,EAAMC,IAAI,GAAG,EAAb,EAAiB;AACnB,QAAI,cAAc,OAAOD,GAAzB,EAA8B;AAC1B,YAAM2C,GAAG,GAAG,sDACR,+DADJ;AAEA,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH,KALkB,CAMnB;;;AACA,QAAIE,MAAM,CAAC7C,GAAD,CAAN,IAAeA,GAAnB,EAAwB;AACpBA,MAAAA,GAAG,GAAG6C,MAAM,CAAC7C,GAAD,CAAZ;AACH;;AACD,QAAI,YAAY,OAAOA,GAAvB,EAA4B;AACxBP,MAAAA,KAAK,CAAC,wCAAD,EAA2CO,GAA3C,CAAL;AACA,YAAM8C,IAAI,GAAG9C,GAAb;AACAA,MAAAA,GAAG,GAAGxB,IAAI,CAACuE,YAAL,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClCA,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd;AACAD,QAAAA,GAAG,CAACE,GAAJ;AACH,OAHK,CAAN;AAIAnD,MAAAA,GAAG,CAACK,MAAJ,CAAWyC,IAAX;AACH,KAlBkB,CAmBnB;;;AACA/F,IAAAA,MAAM,CAACqG,MAAP,CAAcnD,IAAd,EAAoB,KAAKA,IAAzB,EApBmB,CAqBnB;;AACAA,IAAAA,IAAI,CAACnB,IAAL,GAAYmB,IAAI,CAACnB,IAAL,IAAa,KAAKmD,KAA9B;AACA,SAAKoB,UAAL,CAAgBrD,GAAhB,EAAqBC,IAArB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIoD,EAAAA,UAAU,CAACrD,GAAD,EAAMC,IAAN,EAAY;AAClB;AACAR,IAAAA,KAAK,CAAC,0CAAD,EAA6CQ,IAA7C,CAAL;AACA,SAAKqD,GAAL,GAAWvE,MAAM,CAACgC,MAAP,CAAcf,GAAd,EAAmBC,IAAnB,CAAX,CAHkB,CAIlB;;AACA,QAAI,KAAKiB,YAAT,EACI,KAAKqC,WAAL,CAAiBvD,GAAjB,EANc,CAOlB;;AACA,SAAKwD,UAAL,GAAkBxD,GAAlB,CARkB,CASlB;;AACA,SAAKyD,IAAL,CAAU,KAAKH,GAAf;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,WAAW,CAACvD,GAAD,EAAM;AACbP,IAAAA,KAAK,CAAC,sCAAD,CAAL;AACA,UAAMiE,GAAG,GAAG1D,GAAG,CAAC2D,SAAJ,CAAc,SAAd,EAAyBC,KAAzB,CAA+B,CAA/B,CAAZ;AACA5D,IAAAA,GAAG,CAAC6D,kBAAJ,CAAuB,SAAvB;AACA7D,IAAAA,GAAG,CAAC8D,EAAJ,CAAO,SAAP,EAAkB,CAACd,GAAD,EAAMC,GAAN,KAAc;AAC5B,UAAI,KAAKb,eAAL,CAAqB2B,IAArB,CAA0Bf,GAAG,CAACgB,GAA9B,CAAJ,EAAwC;AACpC,aAAKC,KAAL,CAAWjB,GAAX,EAAgBC,GAAhB;AACH,OAFD,MAGK;AACD,aAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACzC,MAAxB,EAAgCiD,CAAC,EAAjC,EAAqC;AACjCR,UAAAA,GAAG,CAACQ,CAAD,CAAH,CAAOhG,IAAP,CAAY8B,GAAZ,EAAiBgD,GAAjB,EAAsBC,GAAtB;AACH;AACJ;AACJ,KATD;AAUH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIgB,EAAAA,KAAK,CAACjB,GAAD,EAAMC,GAAN,EAAW;AACZ,UAAMkB,QAAQ,GAAGnB,GAAG,CAACgB,GAAJ,CAAQ9B,OAAR,CAAgB,KAAKD,KAArB,EAA4B,EAA5B,CAAjB;AACA,UAAMmC,KAAK,GAAGvE,WAAW,CAACkE,IAAZ,CAAiBI,QAAjB,CAAd;AACA,UAAME,IAAI,GAAGD,KAAK,GAAG,KAAH,GAAW,QAA7B,CAHY,CAIZ;AACA;;AACA,UAAME,YAAY,GAAG,MAAM3E,aAAN,GAAsB,GAA3C;AACA,UAAM4E,QAAQ,GAAG,OAAOD,YAAxB;AACA,UAAME,IAAI,GAAGxB,GAAG,CAACyB,OAAJ,CAAY,eAAZ,CAAb;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIF,YAAY,KAAKE,IAAjB,IAAyBD,QAAQ,KAAKC,IAA1C,EAAgD;AAC5C/E,QAAAA,KAAK,CAAC,qBAAD,EAAwB4E,IAAxB,CAAL;AACApB,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd;AACAD,QAAAA,GAAG,CAACE,GAAJ;AACA;AACH;AACJ;;AACD1D,IAAAA,KAAK,CAAC,iBAAD,EAAoB4E,IAApB,CAAL;AACApB,IAAAA,GAAG,CAACyB,SAAJ,CAAc,eAAd,EAA+B,mBAA/B;AACAzB,IAAAA,GAAG,CAACyB,SAAJ,CAAc,cAAd,EAA8B,kBAAkBN,KAAK,GAAG,MAAH,GAAY,YAAnC,CAA9B;AACAnB,IAAAA,GAAG,CAACyB,SAAJ,CAAc,MAAd,EAAsBJ,YAAtB;;AACA,QAAI,CAACF,KAAL,EAAY;AACRnB,MAAAA,GAAG,CAACyB,SAAJ,CAAc,aAAd,EAA6BP,QAAQ,CAACQ,SAAT,CAAmB,CAAnB,IAAwB,MAArD;AACH;;AACDpG,IAAAA,MAAM,CAACqG,QAAP,CAAgBT,QAAhB,EAA0BnB,GAA1B,EAA+BC,GAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACmB,SAAR2B,QAAQ,CAACT,QAAD,EAAWnB,GAAX,EAAgBC,GAAhB,EAAqB;AAChC,UAAM4B,UAAU,GAAGnG,IAAI,CAACoG,gBAAL,CAAsBhG,IAAI,CAACiG,IAAL,CAAUC,SAAV,EAAqB,iBAArB,EAAwCb,QAAxC,CAAtB,CAAnB;AACA,UAAMc,QAAQ,GAAGrG,OAAO,CAACoE,GAAD,CAAP,CAAakC,SAAb,CAAuB,CAAC,IAAD,EAAO,MAAP,EAAe,SAAf,CAAvB,CAAjB;;AACA,UAAMC,OAAO,GAAIrD,GAAD,IAAS;AACrB,UAAIA,GAAJ,EAAS;AACLmB,QAAAA,GAAG,CAACE,GAAJ;AACH;AACJ,KAJD;;AAKA,YAAQ8B,QAAR;AACI,WAAK,IAAL;AACIhC,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAE,8BAAoB;AAAtB,SAAnB;AACA2B,QAAAA,UAAU,CAACO,IAAX,CAAgBzG,MAAM,CAAC0G,oBAAP,EAAhB,EAA+CD,IAA/C,CAAoDnC,GAApD;AACApE,QAAAA,QAAQ,CAACyG,QAAT,CAAkBT,UAAlB,EAA8BlG,MAAM,CAAC0G,oBAAP,EAA9B,EAA6DpC,GAA7D,EAAkEkC,OAAlE;AACA;;AACJ,WAAK,MAAL;AACIlC,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAE,8BAAoB;AAAtB,SAAnB;AACArE,QAAAA,QAAQ,CAACyG,QAAT,CAAkBT,UAAlB,EAA8BlG,MAAM,CAAC4G,UAAP,EAA9B,EAAmDtC,GAAnD,EAAwDkC,OAAxD;AACA;;AACJ,WAAK,SAAL;AACIlC,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AAAE,8BAAoB;AAAtB,SAAnB;AACArE,QAAAA,QAAQ,CAACyG,QAAT,CAAkBT,UAAlB,EAA8BlG,MAAM,CAAC6G,aAAP,EAA9B,EAAsDvC,GAAtD,EAA2DkC,OAA3D;AACA;;AACJ;AACIlC,QAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd;AACArE,QAAAA,QAAQ,CAACyG,QAAT,CAAkBT,UAAlB,EAA8B5B,GAA9B,EAAmCkC,OAAnC;AAhBR;AAkBH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI1B,EAAAA,IAAI,CAAC1E,MAAD,EAAS;AACT,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKA,MAAL,CAAY+E,EAAZ,CAAe,YAAf,EAA6B,KAAK2B,YAAL,CAAkBhC,IAAlB,CAAuB,IAAvB,CAA7B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIgC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACfjG,IAAAA,KAAK,CAAC,gCAAD,EAAmCiG,IAAI,CAACC,EAAxC,CAAL;AACA,UAAMC,MAAM,GAAG,IAAI5G,QAAQ,CAAC6G,MAAb,CAAoB,IAApB,EAA0BH,IAA1B,CAAf;;AACA,QAAIA,IAAI,CAACI,QAAL,KAAkB,CAAtB,EAAyB;AACrB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAe,GAAf;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIjF,EAAAA,EAAE,CAACM,IAAD,EAAOE,EAAP,EAAW;AACT,QAAI,OAAOF,IAAP,KAAgB,UAAhB,IAA8BA,IAAI,YAAYiB,MAAlD,EAA0D;AACtD,YAAM2D,SAAS,GAAG,IAAI7G,kBAAkB,CAAC8G,eAAvB,CAAuC,IAAvC,CAAlB;AACAxG,MAAAA,KAAK,CAAC,kCAAD,EAAqCuG,SAAS,CAAC5E,IAA/C,CAAL;;AACA,UAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC5B,aAAKhB,UAAL,CAAgB8F,GAAhB,CAAoB9E,IAApB,EAA0B4E,SAA1B;AACH,OAFD,MAGK;AACD,aAAK5F,UAAL,CAAgB8F,GAAhB,CAAoB,CAAC1D,GAAD,EAAMkD,IAAN,EAAY9D,IAAZ,KAAqBA,IAAI,CAAC,IAAD,EAAOR,IAAI,CAAC2C,IAAL,CAAUvB,GAAV,CAAP,CAA7C,EAAqEwD,SAArE;AACH;;AACD,UAAI1E,EAAJ,EAAQ;AACJ;AACA0E,QAAAA,SAAS,CAAClC,EAAV,CAAa,SAAb,EAAwBxC,EAAxB;AACH;;AACD,aAAO0E,SAAP;AACH;;AACD,QAAIG,MAAM,CAAC/E,IAAD,CAAN,CAAa,CAAb,MAAoB,GAAxB,EACIA,IAAI,GAAG,MAAMA,IAAb;;AACJ,QAAIoB,GAAG,GAAG,KAAKtC,KAAL,CAAW1C,GAAX,CAAe4D,IAAf,CAAV;;AACA,QAAI,CAACoB,GAAL,EAAU;AACN/C,MAAAA,KAAK,CAAC,2BAAD,EAA8B2B,IAA9B,CAAL;AACAoB,MAAAA,GAAG,GAAG,IAAItD,WAAW,CAACb,SAAhB,CAA0B,IAA1B,EAAgC+C,IAAhC,CAAN;;AACA,WAAKlB,KAAL,CAAWgG,GAAX,CAAe9E,IAAf,EAAqBoB,GAArB;AACH;;AACD,QAAIlB,EAAJ,EACIkB,GAAG,CAACsB,EAAJ,CAAO,SAAP,EAAkBxC,EAAlB;AACJ,WAAOkB,GAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI4D,EAAAA,KAAK,CAAC9E,EAAD,EAAK;AACN,SAAK,MAAM+E,MAAX,IAAqB,KAAKxF,OAAL,CAAaA,OAAb,CAAqB4B,MAArB,EAArB,EAAoD;AAChD4D,MAAAA,MAAM,CAACC,QAAP,CAAgB,sBAAhB;AACH;;AACD,SAAKvH,MAAL,CAAYqH,KAAZ;;AACA,QAAI,KAAK5C,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgB4C,KAAhB,CAAsB9E,EAAtB;AACH,KAFD,MAGK;AACDA,MAAAA,EAAE,IAAIA,EAAE,EAAR;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIiF,EAAAA,GAAG,CAACjF,EAAD,EAAK;AACJ,SAAKT,OAAL,CAAa0F,GAAb,CAAiBjF,EAAjB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIkF,EAAAA,EAAE,CAACC,IAAD,EAAO;AACL,WAAO,KAAK5F,OAAL,CAAa2F,EAAb,CAAgBC,IAAhB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,EAAE,CAACD,IAAD,EAAO;AACL,WAAO,KAAK5F,OAAL,CAAa6F,EAAb,CAAgBD,IAAhB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,MAAM,CAACvF,IAAD,EAAO;AACT,SAAKP,OAAL,CAAa8F,MAAb,CAAoBvF,IAApB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIwF,EAAAA,IAAI,CAAC,GAAGC,IAAJ,EAAU;AACV,SAAKhG,OAAL,CAAaiG,IAAb,CAAkB,SAAlB,EAA6B,GAAGD,IAAhC;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,KAAK,CAAC,GAAGF,IAAJ,EAAU;AACX,SAAKhG,OAAL,CAAaiG,IAAb,CAAkB,SAAlB,EAA6B,GAAGD,IAAhC;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIG,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKnG,OAAL,CAAamG,UAAb,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,WAAO,KAAKpG,OAAL,CAAaoG,QAAb,CAAsBA,QAAtB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACgB,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKrG,OAAL,CAAaqG,QAApB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACa,MAALC,KAAK,GAAG;AACR,WAAO,KAAKtG,OAAL,CAAasG,KAApB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKvG,OAAL,CAAauG,YAAb,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,WAAW,CAACZ,IAAD,EAAO;AACd,WAAO,KAAK5F,OAAL,CAAawG,WAAb,CAAyBZ,IAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIa,EAAAA,YAAY,CAACb,IAAD,EAAO;AACf,WAAO,KAAK5F,OAAL,CAAayG,YAAb,CAA0Bb,IAA1B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIc,EAAAA,iBAAiB,CAACnB,KAAK,GAAG,KAAT,EAAgB;AAC7B,WAAO,KAAKvF,OAAL,CAAa0G,iBAAb,CAA+BnB,KAA/B,CAAP;AACH;;AAlckD;;AAocvDhI,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;;AACA,MAAMiJ,cAAc,GAAGzK,MAAM,CAAC0E,IAAP,CAAYxC,QAAQ,CAACwI,YAAT,CAAsBzJ,SAAlC,EAA6C0J,MAA7C,CAAoD,UAAUC,GAAV,EAAe;AACtF,SAAO,OAAO1I,QAAQ,CAACwI,YAAT,CAAsBzJ,SAAtB,CAAgC2J,GAAhC,CAAP,KAAgD,UAAvD;AACH,CAFsB,CAAvB;AAGAH,cAAc,CAACI,OAAf,CAAuB,UAAUtG,EAAV,EAAc;AACjC/C,EAAAA,MAAM,CAACP,SAAP,CAAiBsD,EAAjB,IAAuB,YAAY;AAC/B,WAAO,KAAKT,OAAL,CAAaS,EAAb,EAAiBuG,KAAjB,CAAuB,KAAKhH,OAA5B,EAAqCG,SAArC,CAAP;AACH,GAFD;AAGH,CAJD;;AAKA8G,MAAM,CAAC1J,OAAP,GAAiB,CAAC4B,GAAD,EAAMC,IAAN,KAAe,IAAI1B,MAAJ,CAAWyB,GAAX,EAAgBC,IAAhB,CAAhC;;AACA6H,MAAM,CAAC1J,OAAP,CAAeG,MAAf,GAAwBA,MAAxB;AACAuJ,MAAM,CAAC1J,OAAP,CAAeC,SAAf,GAA2Ba,WAAW,CAACb,SAAvC;AACAyJ,MAAM,CAAC1J,OAAP,CAAeE,MAAf,GAAwBiB,QAAQ,CAACjB,MAAjC","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", { enumerable: true, get: function () { return namespace_1.Namespace; } });\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = debug_1.default(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\nclass Server extends typed_events_1.StrictEventEmitter {\n    constructor(srv, opts = {}) {\n        super();\n        /**\n         * @private\n         */\n        this._nsps = new Map();\n        this.parentNsps = new Map();\n        if (\"object\" === typeof srv &&\n            srv instanceof Object &&\n            !srv.listen) {\n            opts = srv;\n            srv = undefined;\n        }\n        this.path(opts.path || \"/socket.io\");\n        this.connectTimeout(opts.connectTimeout || 45000);\n        this.serveClient(false !== opts.serveClient);\n        this._parser = opts.parser || parser;\n        this.encoder = new this._parser.Encoder();\n        this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n        this.sockets = this.of(\"/\");\n        this.opts = opts;\n        if (srv)\n            this.attach(srv);\n    }\n    serveClient(v) {\n        if (!arguments.length)\n            return this._serveClient;\n        this._serveClient = v;\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n    _checkNamespace(name, auth, fn) {\n        if (this.parentNsps.size === 0)\n            return fn(false);\n        const keysIterator = this.parentNsps.keys();\n        const run = () => {\n            const nextFn = keysIterator.next();\n            if (nextFn.done) {\n                return fn(false);\n            }\n            nextFn.value(name, auth, (err, allow) => {\n                if (err || !allow) {\n                    run();\n                }\n                else {\n                    fn(this.parentNsps.get(nextFn.value).createChild(name));\n                }\n            });\n        };\n        run();\n    }\n    path(v) {\n        if (!arguments.length)\n            return this._path;\n        this._path = v.replace(/\\/$/, \"\");\n        const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        this.clientPathRegex = new RegExp(\"^\" +\n            escapedPath +\n            \"/socket\\\\.io(\\\\.min|\\\\.msgpack\\\\.min)?\\\\.js(\\\\.map)?$\");\n        return this;\n    }\n    connectTimeout(v) {\n        if (v === undefined)\n            return this._connectTimeout;\n        this._connectTimeout = v;\n        return this;\n    }\n    adapter(v) {\n        if (!arguments.length)\n            return this._adapter;\n        this._adapter = v;\n        for (const nsp of this._nsps.values()) {\n            nsp._initAdapter();\n        }\n        return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     * @public\n     */\n    listen(srv, opts = {}) {\n        return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     * @public\n     */\n    attach(srv, opts = {}) {\n        if (\"function\" == typeof srv) {\n            const msg = \"You are trying to attach socket.io to an express \" +\n                \"request handler function. Please pass a http.Server instance.\";\n            throw new Error(msg);\n        }\n        // handle a port as a string\n        if (Number(srv) == srv) {\n            srv = Number(srv);\n        }\n        if (\"number\" == typeof srv) {\n            debug(\"creating http server and binding to %d\", srv);\n            const port = srv;\n            srv = http.createServer((req, res) => {\n                res.writeHead(404);\n                res.end();\n            });\n            srv.listen(port);\n        }\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        this.initEngine(srv, opts);\n        return this;\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n    initEngine(srv, opts) {\n        // initialize engine\n        debug(\"creating engine.io instance with opts %j\", opts);\n        this.eio = engine.attach(srv, opts);\n        // attach static file serving\n        if (this._serveClient)\n            this.attachServe(srv);\n        // Export http server\n        this.httpServer = srv;\n        // bind to engine events\n        this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n    attachServe(srv) {\n        debug(\"attaching client serving req handler\");\n        const evs = srv.listeners(\"request\").slice(0);\n        srv.removeAllListeners(\"request\");\n        srv.on(\"request\", (req, res) => {\n            if (this.clientPathRegex.test(req.url)) {\n                this.serve(req, res);\n            }\n            else {\n                for (let i = 0; i < evs.length; i++) {\n                    evs[i].call(srv, req, res);\n                }\n            }\n        });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n    serve(req, res) {\n        const filename = req.url.replace(this._path, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.headers[\"if-none-match\"];\n        if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n                debug(\"serve client %s 304\", type);\n                res.writeHead(304);\n                res.end();\n                return;\n            }\n        }\n        debug(\"serve client %s\", type);\n        res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n        res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\"));\n        res.setHeader(\"ETag\", expectedEtag);\n        if (!isMap) {\n            res.setHeader(\"X-SourceMap\", filename.substring(1) + \".map\");\n        }\n        Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n    static sendFile(filename, req, res) {\n        const readStream = fs_1.createReadStream(path.join(__dirname, \"../client-dist/\", filename));\n        const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n        const onError = (err) => {\n            if (err) {\n                res.end();\n            }\n        };\n        switch (encoding) {\n            case \"br\":\n                res.writeHead(200, { \"content-encoding\": \"br\" });\n                readStream.pipe(zlib_1.createBrotliCompress()).pipe(res);\n                stream_1.pipeline(readStream, zlib_1.createBrotliCompress(), res, onError);\n                break;\n            case \"gzip\":\n                res.writeHead(200, { \"content-encoding\": \"gzip\" });\n                stream_1.pipeline(readStream, zlib_1.createGzip(), res, onError);\n                break;\n            case \"deflate\":\n                res.writeHead(200, { \"content-encoding\": \"deflate\" });\n                stream_1.pipeline(readStream, zlib_1.createDeflate(), res, onError);\n                break;\n            default:\n                res.writeHead(200);\n                stream_1.pipeline(readStream, res, onError);\n        }\n    }\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param {engine.Server} engine engine.io (or compatible) server\n     * @return self\n     * @public\n     */\n    bind(engine) {\n        this.engine = engine;\n        this.engine.on(\"connection\", this.onconnection.bind(this));\n        return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n    onconnection(conn) {\n        debug(\"incoming connection with id %s\", conn.id);\n        const client = new client_1.Client(this, conn);\n        if (conn.protocol === 3) {\n            // @ts-ignore\n            client.connect(\"/\");\n        }\n        return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @param {String|RegExp|Function} name nsp name\n     * @param fn optional, nsp `connection` ev handler\n     * @public\n     */\n    of(name, fn) {\n        if (typeof name === \"function\" || name instanceof RegExp) {\n            const parentNsp = new parent_namespace_1.ParentNamespace(this);\n            debug(\"initializing parent namespace %s\", parentNsp.name);\n            if (typeof name === \"function\") {\n                this.parentNsps.set(name, parentNsp);\n            }\n            else {\n                this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n            }\n            if (fn) {\n                // @ts-ignore\n                parentNsp.on(\"connect\", fn);\n            }\n            return parentNsp;\n        }\n        if (String(name)[0] !== \"/\")\n            name = \"/\" + name;\n        let nsp = this._nsps.get(name);\n        if (!nsp) {\n            debug(\"initializing namespace %s\", name);\n            nsp = new namespace_1.Namespace(this, name);\n            this._nsps.set(name, nsp);\n        }\n        if (fn)\n            nsp.on(\"connect\", fn);\n        return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     * @public\n     */\n    close(fn) {\n        for (const socket of this.sockets.sockets.values()) {\n            socket._onclose(\"server shutting down\");\n        }\n        this.engine.close();\n        if (this.httpServer) {\n            this.httpServer.close(fn);\n        }\n        else {\n            fn && fn();\n        }\n    }\n    /**\n     * Sets up namespace middleware.\n     *\n     * @return self\n     * @public\n     */\n    use(fn) {\n        this.sockets.use(fn);\n        return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @param room\n     * @return self\n     * @public\n     */\n    to(room) {\n        return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @param room\n     * @return self\n     * @public\n     */\n    in(room) {\n        return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @param name\n     * @return self\n     * @public\n     */\n    except(name) {\n        this.sockets.except(name);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * @return self\n     * @public\n     */\n    write(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @public\n     */\n    allSockets() {\n        return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        return this.sockets.compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @return self\n     * @public\n     */\n    get volatile() {\n        return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @return self\n     * @public\n     */\n    get local() {\n        return this.sockets.local;\n    }\n    /**\n     * Returns the matching socket instances\n     *\n     * @public\n     */\n    fetchSockets() {\n        return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms\n     *\n     * @param room\n     * @public\n     */\n    socketsJoin(room) {\n        return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms\n     *\n     * @param room\n     * @public\n     */\n    socketsLeave(room) {\n        return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect\n     *\n     * @param close - whether to close the underlying connection\n     * @public\n     */\n    disconnectSockets(close = false) {\n        return this.sockets.disconnectSockets(close);\n    }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n    return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n    Server.prototype[fn] = function () {\n        return this.sockets[fn].apply(this.sockets, arguments);\n    };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\n"]},"metadata":{},"sourceType":"script"}