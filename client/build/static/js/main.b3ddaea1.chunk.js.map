{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isRecievedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInLine","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","TextField","label","onChange","e","target","fullWidth","console","log","text","startIcon","Assignment","fontSize","PhoneDisabled","fontsize","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3ddaea1.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport { Socket } from 'socket.io';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://video-chat-app-se.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children}) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    \r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n        .then((currentStream) => {\r\n                setStream(currentStream);\r\n\r\n                myVideo.current.srcObject = currentStream;\r\n        })\r\n        socket.on('me', (id) => setMe(id))\r\n        socket.on('calluser', ({from, name: callerName, signal}) => {\r\n                setCall({ isRecievedCall: true, from, name: callerName, signal})\r\n        });\r\n    }, []);\r\n    const answerCall = () =>{\r\n        setCallAccepted(true)\r\n        const peer = new Peer({initiator: false, trickle: false, stream});\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', {signal: data, to: call.from});\r\n        })\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        })\r\n\r\n        peer.signal(call.signal)\r\n\r\n        connectionRef.current = peer;\r\n\r\n    }\r\n    const callUser = (id) => {\r\n        const peer = new Peer({initiator: true, trickle: false, stream});\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', {userToCall: id, signalData: data, from: me, name});\r\n        })\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        })\r\n\r\n        socket.on('callaccepted', (signal) =>{\r\n            setCallAccepted(true);\r\n            peer.signal(signal);\r\n        })\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{call,callAccepted,myVideo,userVideo,stream,name,setName,callEnded,me,callUser,leaveCall,answerCall,}}>\r\n            {children}\r\n\r\n        </SocketContext.Provider>\r\n    );\r\n}\r\n\r\nexport{ ContextProvider, SocketContext};","import React, {useContext} from 'react';\r\nimport {Grid , Typography, Paper} from '@material-ui/core';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { SocketContext} from '../SocketContext';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n  }));\r\n \r\nconst VideoPlayer = () => {\r\n    const {name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    return (\r\n  <Grid container className={classes.gridContainer}>\r\n      \r\n      {/* our video */}\r\n      { stream && (\r\n            <Paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\r\n                    <video playsInLine muted ref={myVideo} autoPlay className={classes.video}/>\r\n                </Grid>\r\n            </Paper>\r\n          )}\r\n\r\n      \r\n\r\n  {/* users video */}\r\n  { callAccepted && !callEnded && (\r\n        <Paper className={classes.paper}>\r\n            <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h5\" gutterBottom>{call.name || 'name'}</Typography>\r\n                <video playsInLine ref={userVideo} autoPlay className={classes.video}/>\r\n            </Grid>\r\n        </Paper>\r\n      )}\r\n  </Grid>\r\n    );\r\n};\r\n \r\n \r\nexport default VideoPlayer;","import React, { useContext } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n\r\n\r\n \r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted} = useContext(SocketContext);\r\n    return (\r\n  \r\n        <>\r\n    {call.isRecievedCall && !callAccepted && (\r\n        <div style={{display: 'flex', justifyContent:'center'}}>\r\n            <h1>{call.name} is calling:</h1>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n            Answer\r\n            </Button>\r\n        </div>\r\n\r\n    )}\r\n        </>\r\n      )\r\n};\r\n \r\n \r\nexport default Notifications;","import React, { useState, useContext } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper} from '@material-ui/core';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport CopyToClipboard, { copyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport {SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n\r\nconst Options = ({ children }) => {\r\n   const {me, callAccepted, name, setName, callEnded, leaveCall, callUser} = useContext(SocketContext);\r\n   const [idToCall, setIdToCall] = useState('');\r\n   const classes = useStyles();\r\n    return (\r\n  <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n          <form className={classes.root}>\r\n            <Grid container className={classes.gridContainer}>\r\n                <Grid item xs={12} md={6} className={classes.padding}>\r\n                    <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                    <TextField label=\"Name\" value={name} onChange={(e)=> setName(e.target.value)} fullWidth/>\r\n                    {console.log(me)}\r\n                    <CopyToClipboard text={me} className={classes.margin}>\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                            Copy your ID\r\n                        </Button>\r\n                        \r\n                    </CopyToClipboard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6} className={classes.padding}>\r\n                    <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                    <TextField label=\"ID to Call\" value={idToCall} onChange={(e)=> setIdToCall(e.target.value)} fullWidth/>\r\n                  {callAccepted && !callEnded ? (\r\n                        <Button variant=\"contained\" \r\n                        color=\"secondary\" \r\n                        startIcon={<PhoneDisabled fontsize=\"large\" />}\r\n                        fullWidth\r\n                        onClick={leaveCall}\r\n                        className={classes.margin}\r\n                        > \r\n                            Hang up\r\n                        </Button>\r\n                  ) : (\r\n                    <Button variant=\"contained\" \r\n                    color=\"primary\" \r\n                    startIcon={<Phone fontsize=\"large\" />}\r\n                    fullWidth\r\n                    onClick={() => callUser(idToCall)}\r\n                    className={classes.margin}\r\n                    > \r\n                            Call\r\n                        </Button>\r\n                  )}\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid>\r\n          </form>\r\n          {children}\r\n      </Paper>\r\n      \r\n  </Container>\r\n\r\n\r\n      )\r\n};\r\n \r\n \r\nexport default Options;","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 100px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '600px',\r\n    border: '2px solid black',\r\n\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n      <div className={classes.wrapper}>\r\n\r\n  <AppBar className={classes.appBar\r\n  } position=\"static\" color=\"inherit\">\r\n    <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\r\n  </AppBar>\r\n  <VideoPlayer />\r\n  <Options>\r\n    <Notifications />\r\n  </Options>\r\n        \r\n        \r\n        </div>\r\n      );\r\n}\r\n \r\n \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nimport { ContextProvider} from './SocketContext';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  \n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}